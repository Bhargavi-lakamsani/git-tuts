pipeline {
    agent none
    environment {
        ENV_VAR_STRING = "${params.STRING_ENV}"
        ENV_VAR_CHOICE = "${params.CHOICE_ENV}"
        ENV_VAR_BOOLEAN = "${params.BOOLEAN_ENV}"
    }
    parameters {
        string(name: 'STRING_ENV', defaultValue: 'Default String Value', description: 'Enter a string value')
        choice(name: 'CHOICE_ENV', choices: ['Option 1', 'Option 2'], description: 'Choose an option')
        booleanParam(name: 'BOOLEAN_ENV', defaultValue: true, description: 'Select true or false')
    }
    stages {
        stage('Stage 1') {
            agent { label 'agent1' }
            steps {
                script {
                    println "Global variable BUILD_NUMBER: ${BUILD_NUMBER}"
                    println "Global variable BUILD_URL: ${BUILD_URL}"
                    println "Global variable JOB_NAME: ${JOB_NAME}"
                    println "Environment variable ENV_VAR_STRING: ${ENV_VAR_STRING}"
                    println "Environment variable ENV_VAR_CHOICE: ${ENV_VAR_CHOICE}"
                    println "Environment variable ENV_VAR_BOOLEAN: ${ENV_VAR_BOOLEAN}"
                }
            }
        }
        stage('Stage 2') {
            agent { label 'agent1' }
            steps {
                script {
                    println "Performing Stage 2 in agent1"
                }
            }
            post {
                success {
                    echo 'Stage 2 completed successfully'
                }
            }
        }
        stage('Stage 3') {
            agent { label 'agent2' }
            when {
                allOf {
                    expression { params.CHOICE_ENV == 'Option 1' }
                    branch 'master'
                }
            }
            steps {
                script {
                    println "Performing Stage 3 in agent2"
                }
            }
            post {
                success {
                    echo 'Stage 3 completed successfully'
                }
            }
        }
        stage('Stage 4') {
            agent { label 'agent2' }
            when {
                allOf {
                    expression { params.BOOLEAN_ENV }
                    previousStage 'Stage 3'
                }
            }
            steps {
                script {
                    println "Performing Stage 4 in Agent 2"
                }
            }
            post {
                success {
                    echo 'Stage 4 completed successfully'
                }
            }
        }
    }
    triggers {
        cron('H/5 * * * *')
        pollSCM('* * * * *')
    }
    post {
        always {
            echo 'Pipeline completed'
        }
        success {
            mail to: 'navatabhargavi@gmail.com',
                subject: "Pipeline ${env.JOB_NAME} - Build #${env.BUILD_NUMBER} Successful",
                body: "Congratulations! Your Jenkins pipeline build was successful."
        }
        failure {
            mail to: 'navatabhargavi@gmail.com',
                subject: "Pipeline ${env.JOB_NAME} - Build #${env.BUILD_NUMBER} Failed",
                body: "Sorry, your Jenkins pipeline build failed. Please check the logs for details."
        }
    }
}
